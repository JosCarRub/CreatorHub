# Generated by Django 5.1.3 on 2025-02-09 18:46

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('biografia', models.TextField(blank=True, null=True)),
                ('foto_perfil', models.ImageField(default='fotos_perfil/default.png', upload_to='fotos_perfil/')),
                ('rol', models.CharField(choices=[('EMPRESA', 'Empresa'), ('PARTICULAR', 'Particular')], default='PARTICULAR', max_length=10)),
                ('num_trabajos', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('puntuacion_promedio', models.FloatField(blank=True, default=0.0, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Oferta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tiktok', models.BooleanField(default=False)),
                ('instagram', models.BooleanField(default=False)),
                ('youtube', models.BooleanField(default=False)),
                ('twitch', models.BooleanField(default=False)),
                ('descripcion', models.TextField()),
                ('requisitos', models.TextField()),
                ('estado', models.CharField(choices=[('vigente', 'Vigente'), ('expirada', 'Expirada')], default='vigente', max_length=50)),
                ('fecha_publicacion', models.DateField(auto_now_add=True)),
                ('fecha_expiracion', models.DateField()),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_usuario_ofertas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AplicacionOferta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado_aplicacion', models.CharField(choices=[('aceptada', 'Aceptada'), ('denegada', 'Denegada'), ('solicitada', 'Solicitada')], max_length=100, verbose_name='Estado de la aplicación a la oferta')),
                ('fecha_expiracion', models.DateField()),
                ('puntuacion', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=10, null=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_usuario_aplicaciones', to=settings.AUTH_USER_MODEL)),
                ('oferta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_oferta_aplicaciones', to='aplicacion.oferta')),
            ],
            options={
                'verbose_name': 'Aplicación a la oferta',
                'verbose_name_plural': 'Aplicaciones a las ofertas',
            },
        ),
        migrations.CreateModel(
            name='RedesSocialesUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instagram', models.CharField(blank=True, max_length=100, null=True)),
                ('tiktok', models.CharField(blank=True, max_length=100, null=True)),
                ('youtube', models.CharField(blank=True, max_length=100, null=True)),
                ('twicht', models.CharField(blank=True, max_length=100, null=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_usuario_redes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TipoDeOferta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('gastro', 'Gastronomía'), ('moda', 'Moda'), ('hogar', 'Hogar'), ('tecnologia', 'Tecnología'), ('eventos', 'Eventos'), ('otra', 'Otro')], max_length=100, verbose_name='Tipo de oferta')),
                ('oferta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_oferta_tipos', to='aplicacion.oferta')),
            ],
            options={
                'verbose_name': 'Tipo de oferta',
                'verbose_name_plural': 'Tipos de ofertas',
            },
        ),
    ]
